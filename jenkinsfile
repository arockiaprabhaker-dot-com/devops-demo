pipeline {
    agent any

    environment {
        DOCKER_HUB_USER = 'arockiaprabhaker'    
        DOCKER_HUB_REPO = 'prabhaker'         
        IMAGE_TAG = 'latest'
    }

    stages {
        stage('Build & Push Docker Image') {
            steps {
                script {
                    echo "Building Docker image: ${DOCKER_HUB_USER}/${DOCKER_HUB_REPO}:${IMAGE_TAG}"
                    sh "docker build -t ${DOCKER_HUB_USER}/${DOCKER_HUB_REPO}:${IMAGE_TAG} ."

                    withCredentials([string(credentialsId: 'DOCKER_HUB_PASSWORD', variable: 'DOCKER_HUB_PASSWORD')]) {
                        sh "echo ${DOCKER_HUB_PASSWORD} | docker login -u ${DOCKER_HUB_USER} --password-stdin"
                    }

                    // Push the image to Docker Hub
                    echo "Pushing Docker image to Docker Hub..."
                    sh "docker push ${DOCKER_HUB_USER}/${DOCKER_HUB_REPO}:${IMAGE_TAG}"
                }
            }
        }

        stage('Deploy') {
            steps {
                withEnv(["KUBECONFIG=/var/lib/jenkins/.kube/config"]) {
                    echo 'Updating Minikube context...'
                    sh 'minikube -p minikube update-context'

                    echo 'Deploying Deployment and Service...'
                    sh 'minikube kubectl -- apply -f k8s/deployment.yaml --validate=false --insecure-skip-tls-verify'
                    sh 'minikube kubectl -- apply -f k8s/service.yaml --validate=false --insecure-skip-tls-verify'
                }
            }
        }
    }
}
