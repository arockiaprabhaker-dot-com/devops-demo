pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                script {
                    def dockerEnv = sh(returnStdout: true, script: 'minikube docker-env').trim()
                    sh "${dockerEnv} && echo 'Building Docker image using Minikube daemon...' && docker build -t my-app:latest ."
                }
            }
        }

        stage('Deploy') {
            steps {
                withEnv(["KUBECONFIG=/var/lib/jenkins/.kube/config"]) {
                    echo 'Updating Minikube context...'
                    sh 'minikube -p minikube update-context'

                    echo 'Deploying Deployment and Service...'
                    sh 'minikube kubectl -- apply -f k8s/deployment.yaml --validate=false --insecure-skip-tls-verify'
                    sh 'minikube kubectl -- apply -f k8s/service.yaml --validate=false --insecure-skip-tls-verify'
                }
            }
        }
    }
}
